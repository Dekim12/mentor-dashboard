{"version":3,"sources":["js/store/reducer.js","firebase.service.js","js/store/actions.js","js/appLogic/constants.js","js/appLogic/appLogic.js","js/components/MentorSearch/MentorSearch.js","js/components/Spinner/Spinner.js","js/components/Button/Button.js","js/components/ResultsTable/ResultsTable.js","js/components/TableHead/TableHead.js","js/components/TableBody/TableBody.js","js/components/TableRow/TableRow.js","js/utils/utils.js","js/components/ErrorAlert/ErrorAlert.js","js/components/InfoPanel/InfoPanel.js","App.js","index.js"],"names":["initialState","isLoading","mentorName","undefined","gitName","fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","provider","auth","GithubAuthProvider","fb","login","signInWithPopup","setMentorName","name","type","payload","setData","data","setGitName","STATUSES","checked","checking","in progress","todo","not done","key","keyGen","fetchData","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","addData","response","wrap","_context","prev","next","fetch","sent","json","stop","this","_x","apply","arguments","isNameExist","lowerName","toLowerCase","mentors","localStorage","setItem","defineClassName","status","MentorSearch","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","addSearchQuery","event","currentValue","target","value","searchQuery","replace","findCertainData","preventDefault","shouldComponentUpdate","nextProps","inputElem","current","componentDidMount","mentorNameInStore","getItem","React","createRef","react_default","createElement","className","onSubmit","placeholder","autoFocus","maxLength","onChange","ref","components_Button_Button","content","makeSome–°hanges","Component","connect","state","dispatch","bindActionCreators","Spinner","id","Button","_ref$className","_ref$content","onClick","ResultsTable","requiredData","tasks","assign","students","studentsResults","forEach","student","selectData","keys","components_TableHead_TableHead","components_TableBody_TableBody","allTasks","components_InfoPanel_InfoPanel","TableHead","map","elem","href","concat","rel","TableBody","rows","taskName","components_TableRow_TableRow","taskUrl","taskLink","generateRows","TableRow","tableData","sleep","ms","Promise","resolve","setTimeout","ErrorAlert","changeName","then","InfoPanel","App","result","user","displayName","catch","error","errorCode","code","errorMessage","message","alert","currentSearchContent","currentContent","components_MentorSearch_MentorSearch","aria-hidden","indicator","components_Spinner_Spinner","getDerivedStateFromProps","possibleName","objectSpread","components_ResultsTable_ResultsTable","components_ErrorAlert_ErrorAlert","store","createStore","length","action","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.538d5d13.chunk.js","sourcesContent":["const initialState = {\n    isLoading: true,\n    mentorName: undefined,\n    gitName: undefined\n};\n\nexport const reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'SET_MENTOR':\n            return { ...state, mentorName: action.payload };\n        case 'SET_TASKS':\n            return { ...state, tasks: action.payload };\n        case 'SET_DATA':\n            return {\n                ...state,\n                data: action.payload,\n                isLoading: !state.isLoading\n            };\n        case 'SET_GIT_NAME':\n            return { ...state, gitName: action.payload };\n        default:\n            return state;\n    }\n};\n","import firebase from 'firebase';\n\nconst config = {\n    apiKey: 'AIzaSyCGm_qn8-jCVzqS9t8zBpRFyhAb3RTRuHo',\n    authDomain: 'mentor-dashboard-e8274.firebaseapp.com',\n    databaseURL: 'https://mentor-dashboard-e8274.firebaseio.com',\n    projectId: 'mentor-dashboard-e8274',\n    storageBucket: 'mentor-dashboard-e8274.appspot.com',\n    messagingSenderId: '1073396115912'\n};\nconst fire = firebase.initializeApp(config);\nconst provider = new firebase.auth.GithubAuthProvider();\n\nexport const fb = {\n    login: () => fire.auth().signInWithPopup(provider)\n};\n","export const setMentorName = name => ({\n    type: 'SET_MENTOR',\n    payload: name\n});\n\nexport const setTasks = tasks => ({\n    type: 'SET_TASKS',\n    payload: tasks\n});\n\nexport const setData = data => ({\n    type: 'SET_DATA',\n    payload: data\n});\n\nexport const setGitName = name => ({\n    type: 'SET_GIT_NAME',\n    payload: name\n});\n","export const STATUSES = {\n    checked: 'checked',\n    checking: 'checking',\n    'in progress': 'in-progress',\n    todo: 'to-do',\n    'not done': 'not-done'\n};\n","import { STATUSES } from './constants';\n\nlet key = 0;\nexport const keyGen = () => {\n    key += 1;\n    return key;\n};\n\nexport const fetchData = async addData => {\n    const response = await fetch(\n        'https://mentor-dashboard-server.herokuapp.com/data'\n    );\n    const data = await response.json();\n    addData(data);\n};\n\nexport const isNameExist = (name, data) => {\n    const lowerName = name.toLowerCase();\n    if (data.mentors[lowerName]) {\n        localStorage.setItem('mentorName', name);\n        return true;\n    } else {\n        return false;\n    }\n};\n\nexport const selectData = (mentorName, data) => {\n    const requiredData = {};\n    requiredData.tasks = Object.assign(data.tasks);\n    const students = data.mentors[mentorName].students;\n    requiredData.studentsResults = {};\n    students.forEach(student => {\n        requiredData.studentsResults[student] = data.students[student];\n    });\n    return requiredData;\n};\n\nexport const defineClassName = status => STATUSES[status];\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { setMentorName, setGitName } from '../../store/actions';\nimport { Button } from '../../components';\n\nimport './MentorSearch.css';\n\nclass MentorSearch extends Component {\n    constructor(props) {\n        super(props);\n\n        this.searchQuery = '';\n        this.inputElem = React.createRef();\n    }\n\n    addSearchQuery = event => {\n        let currentValue = event.target.value;\n        this.searchQuery = currentValue.replace(/^\\s+|\\s+$/g, '');\n    };\n\n    findCertainData = event => {\n        event.preventDefault();\n        this.props.setMentorName(this.searchQuery);\n    };\n\n    shouldComponentUpdate = nextProps => {\n        if (nextProps.gitName) {\n            const searchShape = this.inputElem.current;\n            searchShape.value = nextProps.gitName;\n            this.props.setGitName(undefined);\n            this.searchQuery = nextProps.gitName;\n        }\n        return false;\n    };\n\n    componentDidMount = () => {\n        const mentorNameInStore = localStorage.getItem('mentorName');\n        if (mentorNameInStore) {\n            const searchShape = this.inputElem.current;\n            searchShape.value = mentorNameInStore;\n            this.searchQuery = mentorNameInStore;\n        }\n    };\n\n    render() {\n        return (\n            <div className=\"mentor-search\" onSubmit={this.findCertainData}>\n                <form>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Mentor's GitHub name\"\n                        autoFocus\n                        maxLength=\"50\"\n                        onChange={this.addSearchQuery}\n                        ref={this.inputElem}\n                    />\n                </form>\n                <Button\n                    content=\"Search\"\n                    className=\"button-for-search\"\n                    makeSome–°hanges={this.findCertainData}\n                />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    gitName: state.gitName\n});\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            setMentorName,\n            setGitName\n        },\n        dispatch\n    );\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(MentorSearch);\n","import React from 'react';\n\nimport './Spinner.css';\n\nconst Spinner = () => (\n    <article className=\"spinner\">\n        <div id=\"floatingCircles\">\n            <div className=\"circle\" id=\"frotate-01\" />\n            <div className=\"circle\" id=\"frotate-02\" />\n            <div className=\"circle\" id=\"frotate-03\" />\n            <div className=\"circle\" id=\"frotate-04\" />\n            <div className=\"circle\" id=\"frotate-05\" />\n            <div className=\"circle\" id=\"frotate-06\" />\n            <div className=\"circle\" id=\"frotate-07\" />\n            <div className=\"circle\" id=\"frotate-08\" />\n        </div>\n    </article>\n);\n\nexport default Spinner;\n","import React from 'react';\n\nimport './Button.css';\n\nconst Button = ({ className = '', content = '', makeSome–°hanges }) => (\n    <button className={className} onClick={makeSome–°hanges}>\n        {content}\n    </button>\n);\n\nexport default Button;\n","import React from 'react';\nimport { TableHead, TableBody, InfoPanel } from '../../components';\nimport { selectData } from '../../appLogic';\n\nimport './ResultsTable.css';\n\nconst ResultsTable = ({ mentorName, data }) => {\n    const requiredData = selectData(mentorName, data);\n    const students = Object.keys(requiredData.studentsResults);\n\n    return (\n        <article className=\"search-content\">\n            <table className=\"result-table\">\n                <TableHead mentorName={mentorName} students={students} />\n                <TableBody\n                    allTasks={requiredData.tasks}\n                    students={requiredData.studentsResults}\n                />\n            </table>\n            <InfoPanel />\n        </article>\n    );\n};\n\nexport default ResultsTable;\n","import React from 'react';\nimport { keyGen } from '../../appLogic';\n\nimport './TableHead.css';\n\nconst TableHead = ({ students }) => {\n    const generateElements = () =>\n        students.map(elem => (\n            <th key={keyGen()}>\n                <a\n                    href={`https://github.com/${elem}`}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    {elem}\n                </a>\n            </th>\n        ));\n\n    return (\n        <thead className=\"students-name\">\n            <tr>\n                <th key={keyGen()} />\n                {generateElements()}\n            </tr>\n        </thead>\n    );\n};\n\nexport default TableHead;\n","import React from 'react';\nimport { TableRow } from '../../components';\nimport { keyGen } from '../../appLogic';\n\nimport './TableBody.css';\n\nconst TableBody = ({ allTasks, students }) => {\n    const generateRows = (tasks, students) =>\n        tasks.map(taskName => (\n            <TableRow\n                key={keyGen()}\n                taskName={taskName}\n                students={students}\n                taskUrl={allTasks[taskName].taskLink}\n            />\n        ));\n\n    const rows = generateRows(Object.keys(allTasks), students);\n\n    return <tbody>{rows}</tbody>;\n};\n\nexport default TableBody;\n","import React from 'react';\nimport { keyGen, defineClassName } from '../../appLogic';\n\nimport './TableRow.css';\n\nconst TableRow = ({ taskName, students, taskUrl }) => {\n    const tableData = Object.keys(students).map(student => {\n        const studentInfo = students[student];\n        const status = studentInfo[taskName];\n        return <td className={defineClassName(status)} key={keyGen()} />;\n    });\n\n    return (\n        <tr className=\"table-row\">\n            <td key={keyGen()}>\n                <a href={taskUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n                    {taskName}\n                </a>\n            </td>\n            {tableData}\n        </tr>\n    );\n};\n\nexport default TableRow;\n","export const sleep = ms => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { setMentorName } from '../../store/actions';\nimport { sleep } from '../../utils';\n\nimport './ErrorAlert.css';\n\nclass ErrorAlert extends Component {\n    componentDidMount = () => {\n        const changeName = this.props.setMentorName;\n        sleep(2000).then(() => {\n            changeName(undefined);\n        });\n    };\n\n    render() {\n        return (\n            <div className=\"error-window\">\n                <div className=\"error-alert\">\n                    <p>Sorry...</p>\n                    <p>A mentor with that name does not exist.</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            setMentorName\n        },\n        dispatch\n    );\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(ErrorAlert);\n","import React from 'react';\n\nimport './InfoPanel.css';\n\nconst InfoPanel = () => (\n    <article className=\"info-panel\">\n        <h2>Tasks status</h2>\n        <ul className=\"status-list\">\n            <li>\n                <div className=\"checked\" />- checked\n            </li>\n            <li>\n                <div className=\"checking\" />- checking\n            </li>\n            <li>\n                <div className=\"in-progress\" />- in progress\n            </li>\n            <li>\n                <div className=\"not-done\" />- not done\n            </li>\n            <li>\n                <div className=\"to-do\" />- will be\n            </li>\n        </ul>\n    </article>\n);\n\nexport default InfoPanel;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fb } from './firebase.service';\nimport { setData, setMentorName, setGitName } from './js/store/actions';\nimport { isNameExist, fetchData } from './js/appLogic';\nimport {\n    MentorSearch,\n    ErrorAlert,\n    ResultsTable,\n    Spinner\n} from './js/components';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentSearchContent: null\n        };\n    }\n\n    static getDerivedStateFromProps = (props, state) => {\n        const possibleName = props.mentorName;\n        const data = props.data;\n\n        if (possibleName === undefined) {\n            return { ...state, currentSearchContent: null };\n        } else if (isNameExist(possibleName, data)) {\n            return {\n                ...state,\n                currentSearchContent: (\n                    <ResultsTable\n                        mentorName={possibleName.toLowerCase()}\n                        data={data}\n                    />\n                )\n            };\n        } else if (!isNameExist(possibleName, data)) {\n            return { ...state, currentSearchContent: <ErrorAlert /> };\n        }\n    };\n\n    componentDidMount = () => {\n        fetchData(this.props.setData);\n    };\n\n    login = () => {\n        fb.login()\n            .then(result => {\n                const user = result.user.displayName;\n                this.props.setGitName(user);\n                this.props.setMentorName(user);\n            })\n            .catch(error => {\n                const errorCode = error.code;\n                const errorMessage = error.message;\n                alert(errorCode, errorMessage);\n            });\n    };\n\n    render() {\n        const currentContent = this.state.currentSearchContent;\n\n        return (\n            <div className=\"app\">\n                <h1>Mentor dashboard</h1>\n                <MentorSearch />\n                <button onClick={this.login} className=\"authorization\">\n                    <i className=\"fa fa-github fa-2x\" aria-hidden=\"true\" />\n                </button>\n                {currentContent}\n                {this.props.indicator ? <Spinner /> : null}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    mentorName: state.mentorName,\n    data: state.data,\n    indicator: state.isLoading\n});\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            setData,\n            setMentorName,\n            setGitName\n        },\n        dispatch\n    );\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport { reducer } from './js/store/reducer';\nimport App from './App';\n\nimport './style/style.css';\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}