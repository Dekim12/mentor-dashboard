{"version":3,"sources":["js/store/reducer.js","js/store/actions.js","js/appLogic/appLogic.js","js/components/MentorSearch/MentorSearch.js","js/components/Spinner/Spinner.js","js/components/Button/Button.js","js/components/ResultsTable/ResultsTable.js","js/components/TableHead/TableHead.js","js/components/TableBody/TableBody.js","js/components/TableRow/TableRow.js","js/utils/utils.js","js/components/ErrorAlert/ErrorAlert.js","js/components/InfoPanel/InfoPanel.js","App.js","index.js"],"names":["initialState","isLoading","mentorName","undefined","setMentorName","name","type","payload","setData","data","STATUSES","checked","checking","in progress","todo","not done","key","keyGen","fetchData","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","addData","response","wrap","_context","prev","next","fetch","sent","json","stop","this","_x","apply","arguments","isNameExist","lowerName","toLowerCase","mentors","localStorage","setItem","defineClassName","status","MentorSearch","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","addSearchQuery","event","searchQuery","target","value","findCertainData","preventDefault","componentDidMount","mentorNameInStore","getItem","inputElem","current","React","createRef","react_default","createElement","className","onSubmit","placeholder","autoFocus","maxLength","onChange","ref","components_Button_Button","content","makeSomeÐ¡hanges","Component","connect","dispatch","bindActionCreators","Spinner","id","Button","_ref$className","_ref$content","onClick","ResultsTable","requiredData","tasks","assign","students","studentsResults","forEach","student","selectData","keys","components_TableHead_TableHead","components_TableBody_TableBody","allTasks","components_InfoPanel_InfoPanel","TableHead","map","elem","href","concat","rel","TableBody","rows","taskName","components_TableRow_TableRow","taskUrl","taskLink","generateRows","TableRow","tableData","sleep","ms","Promise","resolve","setTimeout","ErrorAlert","changeName","then","InfoPanel","App","state","currentSearchContent","currentContent","components_MentorSearch_MentorSearch","indicator","components_Spinner_Spinner","getDerivedStateFromProps","possibleName","objectSpread","components_ResultsTable_ResultsTable","components_ErrorAlert_ErrorAlert","store","createStore","length","action","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.0829f0f5.chunk.js","sourcesContent":["const initialState = {\n    isLoading: true,\n    mentorName: undefined\n};\n\nexport const reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'SET_MENTOR':\n            return { ...state, mentorName: action.payload };\n        case 'SET_TASKS':\n            return { ...state, tasks: action.payload };\n        case 'SET_DATA':\n            return {\n                ...state,\n                data: action.payload,\n                isLoading: !state.isLoading\n            };\n        default:\n            return state;\n    }\n};\n","export const setMentorName = name => ({\n    type: 'SET_MENTOR',\n    payload: name\n});\n\nexport const setTasks = tasks => ({\n    type: 'SET_TASKS',\n    payload: tasks\n});\n\nexport const setData = data => ({\n    type: 'SET_DATA',\n    payload: data\n});\n","const STATUSES = {\n    checked: 'checked',\n    checking: 'checking',\n    'in progress': 'in-progress',\n    todo: 'to-do',\n    'not done': 'not-done'\n};\n\nlet key = 0;\nexport const keyGen = () => {\n    key += 1;\n    return key;\n};\n\nexport const fetchData = async addData => {\n    const response = await fetch(\n        'https://mentor-dashboard-server.herokuapp.com'\n    );\n    const data = await response.json();\n    addData(data);\n};\n\nexport const isNameExist = (name, data) => {\n    const lowerName = name.toLowerCase();\n    if (data.mentors[lowerName]) {\n        localStorage.setItem('mentorName', name);\n        return true;\n    } else {\n        return false;\n    }\n};\n\nexport const selectData = (mentorName, data) => {\n    const requiredData = {};\n    requiredData.tasks = Object.assign(data.tasks);\n    const students = data.mentors[mentorName].students;\n    requiredData.studentsResults = {};\n    students.forEach(student => {\n        requiredData.studentsResults[student] = data.students[student];\n    });\n    return requiredData;\n};\n\nexport const defineClassName = status => STATUSES[status];\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { setMentorName } from '../../store/actions';\nimport { Button } from '../../components';\n\nimport './MentorSearch.css';\n\nclass MentorSearch extends Component {\n    constructor(props) {\n        super(props);\n\n        this.searchQuery = '';\n        this.inputElem = React.createRef();\n    }\n\n    addSearchQuery = event => {\n        this.searchQuery = event.target.value;\n    };\n\n    findCertainData = event => {\n        event.preventDefault();\n        this.props.setMentorName(this.searchQuery);\n    };\n\n    componentDidMount = () => {\n        const mentorNameInStore = localStorage.getItem('mentorName');\n        if (mentorNameInStore) {\n            const searchShape = this.inputElem.current;\n            searchShape.value = mentorNameInStore;\n            this.searchQuery = mentorNameInStore;\n        }\n    };\n\n    render() {\n        return (\n            <div className=\"mentor-search\" onSubmit={this.findCertainData}>\n                <form>\n                    <label>\n                        GitHub name:\n                        <input\n                            type=\"text\"\n                            placeholder=\"Name\"\n                            autoFocus\n                            maxLength=\"50\"\n                            onChange={this.addSearchQuery}\n                            ref={this.inputElem}\n                        />\n                    </label>\n                </form>\n                <Button\n                    content=\"Search\"\n                    className=\"button-for-search\"\n                    makeSomeÐ¡hanges={this.findCertainData}\n                />\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            setMentorName\n        },\n        dispatch\n    );\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(MentorSearch);\n","import React from 'react';\n\nimport './Spinner.css';\n\nconst Spinner = () => (\n    <article className=\"spinner\">\n        <div id=\"floatingCircles\">\n            <div className=\"circle\" id=\"frotate-01\" />\n            <div className=\"circle\" id=\"frotate-02\" />\n            <div className=\"circle\" id=\"frotate-03\" />\n            <div className=\"circle\" id=\"frotate-04\" />\n            <div className=\"circle\" id=\"frotate-05\" />\n            <div className=\"circle\" id=\"frotate-06\" />\n            <div className=\"circle\" id=\"frotate-07\" />\n            <div className=\"circle\" id=\"frotate-08\" />\n        </div>\n    </article>\n);\n\nexport default Spinner;\n","import React from 'react';\n\nimport './Button.css';\n\nconst Button = ({ className = '', content = '', makeSomeÐ¡hanges }) => (\n    <button className={className} onClick={makeSomeÐ¡hanges}>\n        {content}\n    </button>\n);\n\nexport default Button;\n","import React from 'react';\nimport { TableHead, TableBody, InfoPanel } from '../../components';\nimport { selectData } from '../../appLogic';\n\nimport './ResultsTable.css';\n\nconst ResultsTable = ({ mentorName, data }) => {\n    const requiredData = selectData(mentorName, data);\n    const students = Object.keys(requiredData.studentsResults);\n\n    return (\n        <article className=\"search-content\">\n            <table className=\"result-table\">\n                <TableHead mentorName={mentorName} students={students} />\n                <TableBody\n                    allTasks={requiredData.tasks}\n                    students={requiredData.studentsResults}\n                />\n            </table>\n            <InfoPanel />\n        </article>\n    );\n};\n\nexport default ResultsTable;\n","import React from 'react';\nimport { keyGen } from '../../appLogic';\n\nimport './TableHead.css';\n\nconst TableHead = ({ students }) => {\n    const generateElements = () =>\n        students.map(elem => (\n            <th key={keyGen()}>\n                <a\n                    href={`https://github.com/${elem}`}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    {elem}\n                </a>\n            </th>\n        ));\n\n    return (\n        <thead className=\"students-name\">\n            <tr>\n                <th key={keyGen()} />\n                {generateElements()}\n            </tr>\n        </thead>\n    );\n};\n\nexport default TableHead;\n","import React from 'react';\nimport { TableRow } from '../../components';\nimport { keyGen } from '../../appLogic';\n\nimport './TableBody.css';\n\nconst TableBody = ({ allTasks, students }) => {\n    const generateRows = (tasks, students) =>\n        tasks.map(taskName => (\n            <TableRow\n                key={keyGen()}\n                taskName={taskName}\n                students={students}\n                taskUrl={allTasks[taskName].taskLink}\n            />\n        ));\n\n    const rows = generateRows(Object.keys(allTasks), students);\n\n    return <tbody>{rows}</tbody>;\n};\n\nexport default TableBody;\n","import React from 'react';\nimport { keyGen, defineClassName } from '../../appLogic';\n\nimport './TableRow.css';\n\nconst TableRow = ({ taskName, students, taskUrl }) => {\n    const tableData = Object.keys(students).map(student => {\n        const studentInfo = students[student];\n        const status = studentInfo[taskName];\n        return <td className={defineClassName(status)} key={keyGen()} />;\n    });\n\n    return (\n        <tr className=\"table-row\">\n            <td key={keyGen()}>\n                <a href={taskUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n                    {taskName}\n                </a>\n            </td>\n            {tableData}\n        </tr>\n    );\n};\n\nexport default TableRow;\n","export const sleep = ms => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { setMentorName } from '../../store/actions';\nimport { sleep } from '../../utils';\n\nimport './ErrorAlert.css';\n\nclass ErrorAlert extends Component {\n    componentDidMount = () => {\n        const changeName = this.props.setMentorName;\n        sleep(2000).then(() => {\n            changeName(undefined);\n        });\n    };\n\n    render() {\n        return (\n            <div className=\"error-window\">\n                <div className=\"error-alert\">\n                    <p>Sorry...</p>\n                    <p>A mentor with that name does not exist.</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            setMentorName\n        },\n        dispatch\n    );\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(ErrorAlert);\n","import React from 'react';\n\nimport './InfoPanel.css';\n\nconst InfoPanel = () => (\n    <article className=\"info-pannel\">\n        <h2>Tasks status</h2>\n        <ul className=\"status-list\">\n            <li>\n                <div className=\"checked\" />- checked\n            </li>\n            <li>\n                <div className=\"checking\" />- checking\n            </li>\n            <li>\n                <div className=\"in-progress\" />- in progress\n            </li>\n            <li>\n                <div className=\"not-done\" />- not done\n            </li>\n            <li>\n                <div className=\"to-do\" />- will be\n            </li>\n        </ul>\n    </article>\n);\n\nexport default InfoPanel;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { setData } from './js/store/actions';\nimport { isNameExist, fetchData } from './js/appLogic';\nimport {\n    MentorSearch,\n    ErrorAlert,\n    ResultsTable,\n    Spinner\n} from './js/components';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentSearchContent: null\n        };\n    }\n\n    static getDerivedStateFromProps = (props, state) => {\n        const possibleName = props.mentorName;\n        const data = props.data;\n\n        if (possibleName === undefined) {\n            return { ...state, currentSearchContent: null };\n        } else if (isNameExist(possibleName, data)) {\n            return {\n                ...state,\n                currentSearchContent: (\n                    <ResultsTable\n                        mentorName={possibleName.toLowerCase()}\n                        data={data}\n                    />\n                )\n            };\n        } else if (!isNameExist(possibleName, data)) {\n            return { ...state, currentSearchContent: <ErrorAlert /> };\n        }\n    };\n\n    componentDidMount = () => {\n        fetchData(this.props.setData);\n    };\n\n    render() {\n        const currentContent = this.state.currentSearchContent;\n\n        return (\n            <div className=\"app\">\n                <h1>Mentor dashboard</h1>\n                <MentorSearch />\n                {currentContent}\n                {this.props.indicator ? <Spinner /> : null}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    mentorName: state.mentorName,\n    data: state.data,\n    indicator: state.isLoading\n});\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            setData\n        },\n        dispatch\n    );\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport { reducer } from './js/store/reducer';\nimport App from './App';\n\nimport './style/style.css';\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}